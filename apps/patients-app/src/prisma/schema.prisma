// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator trpc {
  provider       = "prisma-trpc-generator"
  withZod        = true
  withMiddleware = false
  withShield     = false
  contextPath    = "../lib/trpc/context"
  output         = "../app/api/trpc/generated"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL_CLOUD")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Patient {
  id             String          @id @default(uuid())
  name           String
  email          String          @unique
  password       String
  age            Int
  phoneNumber    Int             @unique
  address        String
  height         Float?
  weight         Float?
  gender         Float?
  Doctors        Doctor[]
  Appointment    Appointment[]
  medicalHistory medicalReport[]
}

model Doctor {
  id               String          @id @default(uuid())
  name             String
  email            String          @unique
  password         String
  age              Int
  phoneNumber      Int             @unique
  address          String
  specialty        String
  yeasOfExperience Int
  availability     String[]
  sessionPrice     Float
  Patient          Patient[]
  Appointment      Appointment[]
  medicalReport    medicalReport[]
}

model Appointment {
  id              String   @id @default(uuid())
  reasonForVisit  String
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  appointmentDate DateTime @unique
  status          String?
  doctor          Doctor   @relation(fields: [doctorId], references: [id])
  doctorId        String
  patient         Patient  @relation(fields: [patientId], references: [id])
  patientId       String
}

model medicalReport {
  id           String  @id @default(uuid())
  prescription String
  Doctor       Doctor  @relation(fields: [doctorId], references: [id])
  doctorId     String
  Patient      Patient @relation(fields: [patientId], references: [id])
  patientId    String
}
